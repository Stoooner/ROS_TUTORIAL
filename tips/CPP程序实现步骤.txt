1. 创建工作空间并初始化
    mkdir -p 自定义空间名称/src
    cd 自定义空间名称
    catkin_make
2. 进入src创建ros包并添加依赖
    cd 自定义空间名称/src
    catkin_create_pkg 自定义ROS包名 roscpp rospy std_msgs
3. 进入ros包的src目录编辑源文件
    cd 自定义空间名称/src/自定义ROS包名/src
4. C++源码实现(文件名自定义)
    #include "ros/ros.h"
    int main(int argc, char *argv[])
    {
        //执行 ros 节点初始化
        ros::init(argc,argv,"hello");
        //创建 ros 节点句柄(非必须)
        ros::NodeHandle n;
        //控制台输出 hello world
        ROS_INFO("hello world!");

        return 0;
    }
5. 编辑ros包下的Cmakelist.txt文件
    add_executable(步骤4的源文件名
        src/步骤4的源文件名.cpp
    )
    target_link_libraries(步骤4的源文件名
        ${catkin_LIBRARIES}
    )
6. 进入工作空间目录并编译
    cd 自定义空间名称
    catkin_make
7. 执行：
    7.1 启动命令行1: roscore
    7.2 启动命令行2: cd 自定义工作空间
                   source ./devel/setup.bash
                   rosrun 包名 C++节点
